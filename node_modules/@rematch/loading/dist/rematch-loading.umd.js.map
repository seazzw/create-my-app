{"version":3,"file":"rematch-loading.umd.js","sources":["../src/index.ts"],"sourcesContent":["import { Model, Plugin } from '@rematch/core'\n\nexport interface LoadingConfig {\n\tname?: string\n\twhitelist?: string[]\n\tblacklist?: string[]\n\tasNumber?: boolean\n}\n\nconst cntState = {\n\tglobal: 0,\n\tmodels: {},\n\teffects: {},\n}\n\nconst createLoadingAction = (converter, i) => (\n\tstate,\n\t{ name, action }: any\n) => {\n\tcntState.global += i\n\tcntState.models[name] += i\n\tcntState.effects[name][action] += i\n\n\treturn {\n\t\t...state,\n\t\tglobal: converter(cntState.global),\n\t\tmodels: {\n\t\t\t...state.models,\n\t\t\t[name]: converter(cntState.models[name]),\n\t\t},\n\t\teffects: {\n\t\t\t...state.effects,\n\t\t\t[name]: {\n\t\t\t\t...state.effects[name],\n\t\t\t\t[action]: converter(cntState.effects[name][action]),\n\t\t\t},\n\t\t},\n\t}\n}\n\nconst validateConfig = config => {\n\tif (config.name && typeof config.name !== 'string') {\n\t\tthrow new Error('loading plugin config name must be a string')\n\t}\n\tif (config.asNumber && typeof config.asNumber !== 'boolean') {\n\t\tthrow new Error('loading plugin config asNumber must be a boolean')\n\t}\n\tif (config.whitelist && !Array.isArray(config.whitelist)) {\n\t\tthrow new Error(\n\t\t\t'loading plugin config whitelist must be an array of strings'\n\t\t)\n\t}\n\tif (config.blacklist && !Array.isArray(config.blacklist)) {\n\t\tthrow new Error(\n\t\t\t'loading plugin config blacklist must be an array of strings'\n\t\t)\n\t}\n\tif (config.whitelist && config.blacklist) {\n\t\tthrow new Error(\n\t\t\t'loading plugin config cannot have both a whitelist & a blacklist'\n\t\t)\n\t}\n}\n\nexport default (config: LoadingConfig = {}): Plugin => {\n\tvalidateConfig(config)\n\n\tconst loadingModelName = config.name || 'loading'\n\n\tconst converter =\n\t\tconfig.asNumber === true ? (cnt: number) => cnt : (cnt: number) => cnt > 0\n\n\tconst loading: Model = {\n\t\tname: loadingModelName,\n\t\treducers: {\n\t\t\thide: createLoadingAction(converter, -1),\n\t\t\tshow: createLoadingAction(converter, 1),\n\t\t},\n\t\tstate: {\n\t\t\t...cntState,\n\t\t},\n\t}\n\n\tcntState.global = 0\n\tloading.state.global = converter(cntState.global)\n\n\treturn {\n\t\tconfig: {\n\t\t\tmodels: {\n\t\t\t\tloading,\n\t\t\t},\n\t\t},\n\t\tonModel({ name }: Model) {\n\t\t\t// do not run dispatch on \"loading\" model\n\t\t\tif (name === loadingModelName) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tcntState.models[name] = 0\n\t\t\tloading.state.models[name] = converter(cntState.models[name])\n\t\t\tloading.state.effects[name] = {}\n\t\t\tconst modelActions = this.dispatch[name]\n\n\t\t\t// map over effects within models\n\t\t\tObject.keys(modelActions).forEach((action: string) => {\n\t\t\t\tif (this.dispatch[name][action].isEffect !== true) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tcntState.effects[name][action] = 0\n\t\t\t\tloading.state.effects[name][action] = converter(\n\t\t\t\t\tcntState.effects[name][action]\n\t\t\t\t)\n\n\t\t\t\tconst actionType = `${name}/${action}`\n\n\t\t\t\t// ignore items not in whitelist\n\t\t\t\tif (config.whitelist && !config.whitelist.includes(actionType)) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\t// ignore items in blacklist\n\t\t\t\tif (config.blacklist && config.blacklist.includes(actionType)) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\t// copy orig effect pointer\n\t\t\t\tconst origEffect = this.dispatch[name][action]\n\n\t\t\t\t// create function with pre & post loading calls\n\t\t\t\tconst effectWrapper = async (...props) => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis.dispatch.loading.show({ name, action })\n\t\t\t\t\t\t// waits for dispatch function to finish before calling \"hide\"\n\t\t\t\t\t\tconst effectResult = await origEffect(...props)\n\t\t\t\t\t\tthis.dispatch.loading.hide({ name, action })\n\t\t\t\t\t\treturn effectResult\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tthis.dispatch.loading.hide({ name, action })\n\t\t\t\t\t\tthrow error\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// replace existing effect with new wrapper\n\t\t\t\tthis.dispatch[name][action] = effectWrapper\n\t\t\t})\n\t\t},\n\t}\n}\n"],"names":[],"mappings":"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"}