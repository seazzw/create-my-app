{"version":3,"file":"rematch.min.js","sources":["../../src/utils/validate.ts","../../node_modules/symbol-observable/es/index.js","../../src/pluginFactory.ts","../../src/plugins/dispatch.ts","../../src/plugins/effects.ts","../../node_modules/symbol-observable/es/ponyfill.js","../../node_modules/redux/es/redux.js","../../src/utils/isListener.ts","../../src/redux.ts","../../src/rematch.ts","../../src/utils/deprecate.ts","../../src/utils/mergeConfig.ts","../../src/index.ts"],"sourcesContent":["import { Validation } from '../typings'\n\n/**\n * validate\n *\n * takes an array of arrays of validations and\n * throws if an error occurs\n */\nconst validate = (validations: Validation[]): void => {\n\tif (process.env.NODE_ENV !== 'production') {\n\t\tfor (const validation of validations) {\n\t\t\tconst condition = validation[0]\n\t\t\tconst errorMessage = validation[1]\n\t\t\tif (condition) {\n\t\t\t\tthrow new Error(errorMessage)\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default validate\n","/* global window */\nimport ponyfill from './ponyfill.js';\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;\n","import * as R from './typings'\nimport validate from './utils/validate'\n\n/**\n * PluginFactory\n *\n * makes Plugin objects extend and inherit from a root PluginFactory\n */\nexport default (config: R.Config) => ({\n\tconfig,\n\t/**\n\t * validate\n\t *\n\t * bind validate to the store for easy access\n\t */\n\tvalidate,\n\n\t/**\n\t * create plugin\n\t *\n\t * binds plugin properties and functions to an instance of PluginFactorys\n\t * @param plugin\n\t */\n\tcreate(plugin: R.Plugin): R.Plugin {\n\t\tvalidate([\n\t\t\t[\n\t\t\t\tplugin.onStoreCreated && typeof plugin.onStoreCreated !== 'function',\n\t\t\t\t'Plugin onStoreCreated must be a function',\n\t\t\t],\n\t\t\t[\n\t\t\t\tplugin.onModel && typeof plugin.onModel !== 'function',\n\t\t\t\t'Plugin onModel must be a function',\n\t\t\t],\n\t\t\t[\n\t\t\t\tplugin.middleware && typeof plugin.middleware !== 'function',\n\t\t\t\t'Plugin middleware must be a function',\n\t\t\t],\n\t\t])\n\n\t\tif (plugin.onInit) {\n\t\t\tplugin.onInit.call(this)\n\t\t}\n\n\t\tconst result: R.Plugin | any = {}\n\n\t\tif (plugin.exposed) {\n\t\t\tfor (const key of Object.keys(plugin.exposed)) {\n\t\t\t\tthis[key] =\n\t\t\t\t\ttypeof plugin.exposed[key] === 'function'\n\t\t\t\t\t\t? plugin.exposed[key].bind(this) // bind functions to plugin class\n\t\t\t\t\t\t: Object.create(plugin.exposed[key]) // add exposed to plugin class\n\t\t\t}\n\t\t}\n\t\tfor (const method of ['onModel', 'middleware', 'onStoreCreated']) {\n\t\t\tif (plugin[method]) {\n\t\t\t\tresult[method] = plugin[method].bind(this)\n\t\t\t}\n\t\t}\n\t\treturn result\n\t},\n})\n","import * as R from '../typings.d'\n\n/**\n * Dispatch Plugin\n *\n * generates dispatch[modelName][actionName]\n */\nconst dispatchPlugin: R.Plugin = {\n\texposed: {\n\t\t// required as a placeholder for store.dispatch\n\t\tstoreDispatch(action: R.Action, state: any) {\n\t\t\tconsole.warn('Warning: store not yet loaded')\n\t\t},\n\n\t\tstoreGetState() {\n\t\t\tconsole.warn('Warning: store not yet loaded')\n\t\t},\n\n\t\t/**\n\t\t * dispatch\n\t\t *\n\t\t * both a function (dispatch) and an object (dispatch[modelName][actionName])\n\t\t * @param action R.Action\n\t\t */\n\t\tdispatch(action: R.Action) {\n\t\t\treturn this.storeDispatch(action)\n\t\t},\n\n\t\t/**\n\t\t * createDispatcher\n\t\t *\n\t\t * genereates an action creator for a given model & reducer\n\t\t * @param modelName string\n\t\t * @param reducerName string\n\t\t */\n\t\tcreateDispatcher(modelName: string, reducerName: string) {\n\t\t\treturn async (payload?: any, meta?: any): Promise<any> => {\n\t\t\t\tconst action: R.Action = { type: `${modelName}/${reducerName}` }\n\t\t\t\tif (typeof payload !== 'undefined') {\n\t\t\t\t\taction.payload = payload\n\t\t\t\t}\n\t\t\t\tif (typeof meta !== 'undefined') {\n\t\t\t\t\taction.meta = meta\n\t\t\t\t}\n\t\t\t\treturn this.dispatch(action)\n\t\t\t}\n\t\t},\n\t},\n\n\t// access store.dispatch after store is created\n\tonStoreCreated(store: any) {\n\t\tthis.storeDispatch = store.dispatch\n\t\tthis.storeGetState = store.getState\n\t\treturn { dispatch: this.dispatch }\n\t},\n\n\t// generate action creators for all model.reducers\n\tonModel(model: R.Model) {\n\t\tthis.dispatch[model.name] = {}\n\t\tif (!model.reducers) {\n\t\t\treturn\n\t\t}\n\t\tfor (const reducerName of Object.keys(model.reducers)) {\n\t\t\tthis.validate([\n\t\t\t\t[\n\t\t\t\t\t!!reducerName.match(/\\/.+\\//),\n\t\t\t\t\t`Invalid reducer name (${model.name}/${reducerName})`,\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\ttypeof model.reducers[reducerName] !== 'function',\n\t\t\t\t\t`Invalid reducer (${model.name}/${reducerName}). Must be a function`,\n\t\t\t\t],\n\t\t\t])\n\t\t\tthis.dispatch[model.name][reducerName] = this.createDispatcher.apply(\n\t\t\t\tthis,\n\t\t\t\t[model.name, reducerName]\n\t\t\t)\n\t\t}\n\t},\n}\n\nexport default dispatchPlugin\n","/* tslint-disable member-ordering */\nimport * as R from '../typings'\n\n/**\n * Effects Plugin\n *\n * Plugin for handling async actions\n */\nconst effectsPlugin: R.Plugin = {\n\texposed: {\n\t\t// expose effects for access from dispatch plugin\n\t\teffects: {},\n\t},\n\n\t// add effects to dispatch so that dispatch[modelName][effectName] calls an effect\n\tonModel(model: R.Model): void {\n\t\tif (!model.effects) {\n\t\t\treturn\n\t\t}\n\n\t\tconst effects =\n\t\t\ttypeof model.effects === 'function'\n\t\t\t\t? model.effects(this.dispatch)\n\t\t\t\t: model.effects\n\n\t\tfor (const effectName of Object.keys(effects)) {\n\t\t\tthis.validate([\n\t\t\t\t[\n\t\t\t\t\t!!effectName.match(/\\//),\n\t\t\t\t\t`Invalid effect name (${model.name}/${effectName})`,\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\ttypeof effects[effectName] !== 'function',\n\t\t\t\t\t`Invalid effect (${model.name}/${effectName}). Must be a function`,\n\t\t\t\t],\n\t\t\t])\n\t\t\tthis.effects[`${model.name}/${effectName}`] = effects[effectName].bind(\n\t\t\t\tthis.dispatch[model.name]\n\t\t\t)\n\t\t\t// add effect to dispatch\n\t\t\t// is assuming dispatch is available already... that the dispatch plugin is in there\n\t\t\tthis.dispatch[model.name][effectName] = this.createDispatcher.apply(\n\t\t\t\tthis,\n\t\t\t\t[model.name, effectName]\n\t\t\t)\n\t\t\t// tag effects so they can be differentiated from normal actions\n\t\t\tthis.dispatch[model.name][effectName].isEffect = true\n\t\t}\n\t},\n\n\t// process async/await actions\n\tmiddleware(store) {\n\t\treturn next => async (action: R.Action) => {\n\t\t\t// async/await acts as promise middleware\n\t\t\tif (action.type in this.effects) {\n\t\t\t\tawait next(action)\n\t\t\t\treturn this.effects[action.type](\n\t\t\t\t\taction.payload,\n\t\t\t\t\tstore.getState(),\n\t\t\t\t\taction.meta\n\t\t\t\t)\n\t\t\t}\n\t\t\treturn next(action)\n\t\t}\n\t},\n}\n\nexport default effectsPlugin\n","export default function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n","import $$observable from 'symbol-observable';\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar ActionTypes = {\n  INIT: '@@redux/INIT' + Math.random().toString(36).substring(7).split('').join('.'),\n  REPLACE: '@@redux/REPLACE' + Math.random().toString(36).substring(7).split('').join('.')\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nfunction isPlainObject(obj) {\n  if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) !== 'object' || obj === null) return false;\n\n  var proto = obj;\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\n/**\n * Creates a Redux store that holds the state tree.\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error('Expected the enhancer to be a function.');\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error('Expected the reducer to be a function.');\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n  function getState() {\n    if (isDispatching) {\n      throw new Error('You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected the listener to be a function.');\n    }\n\n    if (isDispatching) {\n      throw new Error('You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api-reference/store#subscribe(listener) for more details.');\n    }\n\n    var isSubscribed = true;\n\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error('You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api-reference/store#subscribe(listener) for more details.');\n      }\n\n      isSubscribed = false;\n\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n    };\n  }\n\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n    }\n\n    if (isDispatching) {\n      throw new Error('Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error('Expected the nextReducer to be a function.');\n    }\n\n    currentReducer = nextReducer;\n    dispatch({ type: ActionTypes.REPLACE });\n  }\n\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if ((typeof observer === 'undefined' ? 'undefined' : _typeof(observer)) !== 'object' || observer === null) {\n          throw new TypeError('Expected the observer to be an object.');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return { unsubscribe: unsubscribe };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  }\n\n  // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n  dispatch({ type: ActionTypes.INIT });\n\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n}\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionDescription = actionType && 'action \"' + String(actionType) + '\"' || 'an action';\n\n  return 'Given ' + actionDescription + ', reducer \"' + key + '\" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state. ' + 'If you want this reducer to hold no value, you can return null instead of undefined.';\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return 'The ' + argumentName + ' has unexpected type of \"' + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + '\". Expected argument to be an object with the following ' + ('keys: \"' + reducerKeys.join('\", \"') + '\"');\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('\"' + unexpectedKeys.join('\", \"') + '\" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('\"' + reducerKeys.join('\", \"') + '\". Unexpected keys will be ignored.');\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, { type: ActionTypes.INIT });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined. If you don\\'t want to set a value for this reducer, ' + 'you can use null instead of undefined.');\n    }\n\n    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');\n    if (typeof reducer(undefined, { type: type }) === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined when probed with a random type. ' + ('Don\\'t try to handle ' + ActionTypes.INIT + ' or other actions in \"redux/*\" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined, but can be null.');\n    }\n  });\n}\n\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning('No reducer provided for key \"' + key + '\"');\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n  var finalReducerKeys = Object.keys(finalReducers);\n\n  var unexpectedKeyCache = void 0;\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError = void 0;\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var action = arguments[1];\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n      if (typeof nextStateForKey === 'undefined') {\n        var errorMessage = getUndefinedStateErrorMessage(_key, action);\n        throw new Error(errorMessage);\n      }\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass a single function as the first argument,\n * and get a function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if ((typeof actionCreators === 'undefined' ? 'undefined' : _typeof(actionCreators)) !== 'object' || actionCreators === null) {\n    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators === 'undefined' ? 'undefined' : _typeof(actionCreators)) + '. ' + 'Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?');\n  }\n\n  var keys = Object.keys(actionCreators);\n  var boundActionCreators = {};\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var actionCreator = actionCreators[key];\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n  return boundActionCreators;\n}\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\n\nfunction compose() {\n  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(undefined, arguments));\n    };\n  });\n}\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      var store = createStore.apply(undefined, args);\n      var _dispatch = function dispatch() {\n        throw new Error('Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(undefined, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(undefined, chain)(store.dispatch);\n\n      return _extends({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n/*\n * This is a dummy function to check if the function name has been altered by minification.\n * If the function has been minified and NODE_ENV !== 'production', warn the user.\n */\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  warning(\"You are currently using minified code outside of NODE_ENV === 'production'. \" + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexport { createStore, combineReducers, bindActionCreators, applyMiddleware, compose, ActionTypes as __DO_NOT_USE__ActionTypes };\n","/**\n * isListener\n *\n * determines if an action is a listener on another model\n */\nexport default (reducer: string): boolean => reducer.includes('/')\n","import * as Redux from 'redux'\nimport * as R from './typings'\nimport isListener from './utils/isListener'\n\nconst composeEnhancersWithDevtools = (\n\tdevtoolOptions: R.DevtoolOptions = {}\n): any => {\n\tconst { disabled, ...options } = devtoolOptions\n\t/* istanbul ignore next */\n\treturn !disabled &&\n\t\ttypeof window === 'object' &&\n\t\twindow.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n\t\t? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__(options)\n\t\t: Redux.compose\n}\n\nexport default function({\n\tredux,\n\tmodels,\n}: {\n\tredux: R.ConfigRedux,\n\tmodels: R.Model[],\n}) {\n\tconst combineReducers = redux.combineReducers || Redux.combineReducers\n\tconst createStore: Redux.StoreCreator = redux.createStore || Redux.createStore\n\tconst initialState: any =\n\t\ttypeof redux.initialState !== 'undefined' ? redux.initialState : {}\n\n\tthis.reducers = redux.reducers\n\n\t// combine models to generate reducers\n\tthis.mergeReducers = (nextReducers: R.ModelReducers = {}) => {\n\t\t// merge new reducers with existing reducers\n\t\tthis.reducers = { ...this.reducers, ...nextReducers }\n\t\tif (!Object.keys(this.reducers).length) {\n\t\t\t// no reducers, just return state\n\t\t\treturn (state: any) => state\n\t\t}\n\t\treturn combineReducers(this.reducers)\n\t}\n\n\tthis.createModelReducer = (model: R.Model) => {\n\t\tconst modelBaseReducer = model.baseReducer\n\t\tconst modelReducers = {}\n\t\tfor (const modelReducer of Object.keys(model.reducers || {})) {\n\t\t\tconst action = isListener(modelReducer)\n\t\t\t\t? modelReducer\n\t\t\t\t: `${model.name}/${modelReducer}`\n\t\t\tmodelReducers[action] = model.reducers[modelReducer]\n\t\t}\n\t\tconst combinedReducer = (state: any = model.state, action: R.Action) => {\n\t\t\t// handle effects\n\t\t\tif (typeof modelReducers[action.type] === 'function') {\n\t\t\t\treturn modelReducers[action.type](state, action.payload, action.meta)\n\t\t\t}\n\t\t\treturn state\n\t\t}\n\n\t\tthis.reducers[model.name] = !modelBaseReducer\n\t\t\t? combinedReducer\n\t\t\t: (state: any, action: R.Action) =>\n\t\t\t\t\tcombinedReducer(modelBaseReducer(state, action), action)\n\t}\n\t// initialize model reducers\n\tfor (const model of models) {\n\t\tthis.createModelReducer(model)\n\t}\n\n\tthis.createRootReducer = (\n\t\trootReducers: R.RootReducers = {}\n\t): Redux.Reducer<any, R.Action> => {\n\t\tconst mergedReducers: Redux.Reducer<any> = this.mergeReducers()\n\t\tif (Object.keys(rootReducers).length) {\n\t\t\treturn (state, action) => {\n\t\t\t\tconst rootReducerAction = rootReducers[action.type]\n\t\t\t\tif (rootReducers[action.type]) {\n\t\t\t\t\treturn mergedReducers(rootReducerAction(state, action), action)\n\t\t\t\t}\n\t\t\t\treturn mergedReducers(state, action)\n\t\t\t}\n\t\t}\n\t\treturn mergedReducers\n\t}\n\n\tconst rootReducer = this.createRootReducer(redux.rootReducers)\n\n\tconst middlewares = Redux.applyMiddleware(...redux.middlewares)\n\tconst enhancers = composeEnhancersWithDevtools(redux.devtoolOptions)(\n\t\t...redux.enhancers,\n\t\tmiddlewares\n\t)\n\n\tthis.store = createStore(rootReducer, initialState, enhancers)\n\n\treturn this\n}\n","import pluginFactory from './pluginFactory'\nimport dispatchPlugin from './plugins/dispatch'\nimport effectsPlugin from './plugins/effects'\nimport createRedux from './redux'\nimport * as R from './typings'\nimport validate from './utils/validate'\n\nconst corePlugins: R.Plugin[] = [dispatchPlugin, effectsPlugin]\n\n/**\n * Rematch class\n *\n * an instance of Rematch generated by \"init\"\n */\nexport default class Rematch {\n\tprotected config: R.Config\n\tprotected models: R.Model[]\n\tprivate plugins: R.Plugin[] = []\n\tprivate pluginFactory: R.PluginFactory\n\n\tconstructor(config: R.Config) {\n\t\tthis.config = config\n\t\tthis.pluginFactory = pluginFactory(config)\n\t\tfor (const plugin of corePlugins.concat(this.config.plugins)) {\n\t\t\tthis.plugins.push(this.pluginFactory.create(plugin))\n\t\t}\n\t\t// preStore: middleware, model hooks\n\t\tthis.forEachPlugin('middleware', (middleware) => {\n\t\t\tthis.config.redux.middlewares.push(middleware)\n\t\t})\n\t}\n\tpublic forEachPlugin(method: string, fn: (content: any) => void) {\n\t\tfor (const plugin of this.plugins) {\n\t\t\tif (plugin[method]) {\n\t\t\t\tfn(plugin[method])\n\t\t\t}\n\t\t}\n\t}\n\tpublic getModels(models: R.Models): R.Model[] {\n\t\treturn Object.keys(models).map((name: string) => ({\n\t\t\tname,\n\t\t\t...models[name],\n\t\t\treducers: models[name].reducers || {},\n\t\t}))\n\t}\n\tpublic addModel(model: R.Model) {\n\t\tvalidate([\n\t\t\t[!model, 'model config is required'],\n\t\t\t[typeof model.name !== 'string', 'model \"name\" [string] is required'],\n\t\t\t[model.state === undefined && model.baseReducer === undefined, 'model \"state\" is required'],\n\t\t\t[model.baseReducer !== undefined && typeof model.baseReducer !== 'function', 'model \"baseReducer\" must be a function'],\n\t\t])\n\t\t// run plugin model subscriptions\n\t\tthis.forEachPlugin('onModel', (onModel) => onModel(model))\n\t}\n\tpublic init() {\n\t\t// collect all models\n\t\tthis.models = this.getModels(this.config.models)\n\t\tfor (const model of this.models) {\n\t\t\tthis.addModel(model)\n\t\t}\n\t\t// create a redux store with initialState\n\t\t// merge in additional extra reducers\n\t\tconst redux = createRedux.call(this, {\n\t\t\tredux: this.config.redux,\n\t\t\tmodels: this.models,\n\t\t})\n\n\t\tconst rematchStore = {\n\t\t\tname: this.config.name,\n\t\t\t...redux.store,\n\t\t\t// dynamic loading of models with `replaceReducer`\n\t\t\tmodel: (model: R.Model) => {\n\t\t\t\tthis.addModel(model)\n\t\t\t\tredux.mergeReducers(redux.createModelReducer(model))\n\t\t\t\tredux.store.replaceReducer(redux.createRootReducer(this.config.redux.rootReducers))\n\t\t\t\tredux.store.dispatch({ type: '@@redux/REPLACE '})\n\t\t\t},\n\t\t}\n\n\t\tthis.forEachPlugin('onStoreCreated', (onStoreCreated) => {\n\t\t\tconst returned = onStoreCreated(rematchStore)\n\t\t\t// if onStoreCreated returns an object value\n\t\t\t// merge its returned value onto the store\n\t\t\tif (returned) {\n\t\t\t\tObject.keys(returned || {}).forEach((key) => {\n\t\t\t\t\trematchStore[key] = returned[key]\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\n\t\treturn rematchStore\n\t}\n}\n","/**\n * deprecate\n *\n * handles deprecation warnings in development\n */\nexport default (warning: string): void => {\n\tconsole.warn(warning)\n}\n","import * as R from '../typings'\nimport validate from './validate'\n\nconst merge = (original: any, next: any): any => {\n\treturn next ? { ...next, ...(original || {}) } : original || {}\n}\n\nconst isObject = (obj: object): boolean =>\n\tArray.isArray(obj) || typeof obj !== 'object'\n\n/**\n * mergeConfig\n *\n * merge init configs together\n */\nexport default (initConfig: R.InitConfig & { name: string }): R.Config => {\n\tconst config: R.Config = {\n\t\tname: initConfig.name,\n\t\tmodels: {},\n\t\tplugins: [],\n\t\t...initConfig,\n\t\tredux: {\n\t\t\treducers: {},\n\t\t\trootReducers: {},\n\t\t\tenhancers: [],\n\t\t\tmiddlewares: [],\n\t\t\t...initConfig.redux,\n\t\t\tdevtoolOptions: {\n\t\t\t\tname: initConfig.name,\n\t\t\t\t...(initConfig.redux && initConfig.redux.devtoolOptions\n\t\t\t\t\t? initConfig.redux.devtoolOptions\n\t\t\t\t\t: {}),\n\t\t\t},\n\t\t},\n\t}\n\n\tif (process.env.NODE_ENV !== 'production') {\n\t\tvalidate([\n\t\t\t[!Array.isArray(config.plugins), 'init config.plugins must be an array'],\n\t\t\t[isObject(config.models), 'init config.models must be an object'],\n\t\t\t[\n\t\t\t\tisObject(config.redux.reducers),\n\t\t\t\t'init config.redux.reducers must be an object',\n\t\t\t],\n\t\t\t[\n\t\t\t\t!Array.isArray(config.redux.middlewares),\n\t\t\t\t'init config.redux.middlewares must be an array',\n\t\t\t],\n\t\t\t[\n\t\t\t\t!Array.isArray(config.redux.enhancers),\n\t\t\t\t'init config.redux.enhancers must be an array of functions',\n\t\t\t],\n\t\t\t[\n\t\t\t\tconfig.redux.combineReducers &&\n\t\t\t\t\ttypeof config.redux.combineReducers !== 'function',\n\t\t\t\t'init config.redux.combineReducers must be a function',\n\t\t\t],\n\t\t\t[\n\t\t\t\tconfig.redux.createStore &&\n\t\t\t\t\ttypeof config.redux.createStore !== 'function',\n\t\t\t\t'init config.redux.createStore must be a function',\n\t\t\t],\n\t\t])\n\t}\n\n\t// defaults\n\tfor (const plugin of config.plugins) {\n\t\tif (plugin.config) {\n\t\t\t// models\n\t\t\tconst models: R.Models = merge(config.models, plugin.config.models)\n\t\t\tconfig.models = models\n\n\t\t\t// plugins\n\t\t\tconfig.plugins = [...config.plugins, ...(plugin.config.plugins || [])]\n\n\t\t\t// redux\n\t\t\tif (plugin.config.redux) {\n\t\t\t\tconfig.redux.initialState = merge(\n\t\t\t\t\tconfig.redux.initialState,\n\t\t\t\t\tplugin.config.redux.initialState\n\t\t\t\t)\n\t\t\t\tconfig.redux.reducers = merge(\n\t\t\t\t\tconfig.redux.reducers,\n\t\t\t\t\tplugin.config.redux.reducers\n\t\t\t\t)\n\t\t\t\tconfig.redux.rootReducers = merge(\n\t\t\t\t\tconfig.redux.rootReducers,\n\t\t\t\t\tplugin.config.redux.reducers\n\t\t\t\t)\n\t\t\t\tconfig.redux.enhancers = [\n\t\t\t\t\t...config.redux.enhancers,\n\t\t\t\t\t...(plugin.config.redux.enhancers || []),\n\t\t\t\t]\n\t\t\t\tconfig.redux.middlewares = [\n\t\t\t\t\t...config.redux.middlewares,\n\t\t\t\t\t...(plugin.config.redux.middlewares || []),\n\t\t\t\t]\n\t\t\t\tconfig.redux.combineReducers =\n\t\t\t\t\tconfig.redux.combineReducers || plugin.config.redux.combineReducers\n\t\t\t\tconfig.redux.createStore =\n\t\t\t\t\tconfig.redux.createStore || plugin.config.redux.createStore\n\t\t\t}\n\t\t}\n\t}\n\treturn config\n}\n","import Rematch from './rematch'\nimport * as R from './typings'\nimport deprecate from './utils/deprecate'\nimport mergeConfig from './utils/mergeConfig'\n\nexport const getState = () => {\n\tdeprecate(`global getState has been removed in @rematch/core 1.0.0-beta.3.\n\tSee https://github.com/rematch/rematch/blob/master/CHANGELOG.md#100-beta3---2018-06-23 for details.\n\tFor a quick fix, import and use store.getState.`)\n}\n\nexport const dispatch = () => {\n\tdeprecate(`global dispatch has been removed in @rematch/core 1.0.0-beta.3.\n\tSee https://github.com/rematch/rematch/blob/master/CHANGELOG.md#100-beta3---2018-06-23 for details.\n\tFor a quick fix, import and use store.dispatch.`)\n}\n\n/**\n * global createModel\n *\n * creates a model for the given object\n * this is for autocomplete purposes only\n * returns the same object that was received as argument\n */\nexport function createModel<S = any, M extends R.ModelConfig<S> = any>(model: M) {\n\treturn model\n}\n\n// incrementer used to provide a store name if none exists\nlet count = 0\n\n/**\n * init\n *\n * generates a Rematch store\n * with a set configuration\n * @param config\n */\nexport const init = (initConfig: R.InitConfig = {}): R.RematchStore => {\n\tconst name = initConfig.name || count.toString()\n\tcount += 1\n\tconst config: R.Config = mergeConfig({ ...initConfig, name })\n\treturn new Rematch(config).init()\n}\n\nexport default {\n\tinit,\n}\n"],"names":["root","validate","validations","config","create","plugin","onStoreCreated","onModel","middleware","onInit","call","this","result","exposed","_a","Object","keys","_i","key","bind","_c","_b","method","dispatchPlugin","storeDispatch","action","state","console","warn","storeGetState","dispatch","createDispatcher","modelName","reducerName","payload","meta","type","store","getState","model","name","reducers","match","apply","effectsPlugin","effects","effectName","isEffect","next","symbolObservablePonyfill","Symbol","observable","ponyfill","self","window","global","module","Function","ActionTypes","INIT","Math","random","toString","substring","split","join","REPLACE","_typeof","iterator","obj","constructor","prototype","_extends","assign","target","i","arguments","length","source","hasOwnProperty","isPlainObject","proto","getPrototypeOf","createStore","reducer","preloadedState","enhancer","_ref2","undefined","Error","currentReducer","currentState","currentListeners","nextListeners","isDispatching","ensureCanMutateNextListeners","slice","subscribe","listener","isSubscribed","push","index","indexOf","splice","listeners","replaceReducer","nextReducer","$$observable","_ref","outerSubscribe","observer","TypeError","observeState","unsubscribe","getUndefinedStateErrorMessage","actionType","assertReducerShape","forEach","combineReducers","reducerKeys","finalReducers","finalReducerKeys","shapeAssertionError","e","hasChanged","nextState","_key","previousStateForKey","nextStateForKey","errorMessage","bindActionCreator","actionCreator","bindActionCreators","actionCreators","boundActionCreators","compose","_len","funcs","Array","arg","reduce","a","b","applyMiddleware","middlewares","_len2","args","_key2","_dispatch","middlewareAPI","chain","map","includes","composeEnhancersWithDevtools","devtoolOptions","disabled","options","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","Redux.compose","redux","models","Redux.combineReducers","Redux.createStore","initialState","mergeReducers","nextReducers","_this","createModelReducer","modelBaseReducer","baseReducer","modelReducers","modelReducer","isListener","combinedReducer","models_1","createRootReducer","rootReducers","mergedReducers","rootReducerAction","rootReducer","Redux.applyMiddleware","Redux","enhancers","corePlugins","pluginFactory","concat","plugins","forEachPlugin","Rematch","fn","getModels","addModel","createRedux","rematchStore","returned","warning","merge","original","initConfig","deprecate","createModel","count","init","mergeConfig"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;iDAQA,ICLIA,KDKEC,SAAW,SAACC,4BEAFC,GAAqB,OACpCA,SAMAF,kBAQAG,OAAA,SAAOC,GACNJ,SAAS,CACR,CACCI,EAAOC,gBAAmD,mBAA1BD,EAAOC,eACvC,4CAED,CACCD,EAAOE,SAAqC,mBAAnBF,EAAOE,QAChC,qCAED,CACCF,EAAOG,YAA2C,mBAAtBH,EAAOG,WACnC,0CAIEH,EAAOI,QACVJ,EAAOI,OAAOC,KAAKC;AAGpB,IAAMC,EAAyB;AAE/B,GAAIP,EAAOQ,QACV,IAAkB,QAAAC,EAAAC,OAAOC,KAAKX,EAAOQ,SAAnBI,WAAAA,IAA6B,CAA1C,IAAMC;AACVP,KAAKO,GAC2B,mBAAxBb,EAAOQ,QAAQK,GACnBb,EAAOQ,QAAQK,GAAKC,KAAKR,MACzBI,OAAOX,OAAOC,EAAOQ,QAAQK,IAGnC,IAAqB,QAAAE,GAAC,UAAW,aAAc,kBAA1BC,WAAAA,IAA6C,CAA7D,IAAMC;AACNjB,EAAOiB,KACVV,EAAOU,GAAUjB,EAAOiB,GAAQH,KAAKR,OAGvC,OAAOC,KCnDHW,eAA2B,CAChCV,QAAS,CAERW,uBAAcC,EAAkBC,GAC/BC,QAAQC,KAAK,kCAGdC,yBACCF,QAAQC,KAAK,kCASdE,kBAASL,GACR,OAAOd,KAAKa,cAAcC,IAU3BM,0BAAiBC,EAAmBC,GAApC;AACC,OAAO,SAAOC,QAAeC;oCAQ5B,OAPMV,EAAmB,CAAEW,KAASJ,MAAaC,QAC1B,IAAZC,UACVT,EAAOS,QAAUA,cAEE,IAATC,OACVV,EAAOU,KAAOA,SAERxB,KAAKmB,SAASL,WAMxBnB,wBAAe+B,GAGd,OAFA1B,KAAKa,cAAgBa,EAAMP,SAC3BnB,KAAKkB,cAAgBQ,EAAMC,SACpB,CAAER,SAAUnB,KAAKmB,WAIzBvB,iBAAQgC,GAEP,GADA5B,KAAKmB,SAASS,EAAMC,MAAQ,GACvBD,EAAME,SAGX,IAA0B,QAAA3B,EAAAC,OAAOC,KAAKuB,EAAME,UAAlBxB,WAAAA,IAA6B,CAAlD,IAAMgB;AACVtB,KAAKV,SAAS,CACb,GACGgC,EAAYS,MAAM,UACpB,yBAAyBH,EAAMC,SAAQP,OAExC,CACwC,mBAAhCM,EAAME,SAASR,GACtB,oBAAoBM,EAAMC,SAAQP,6BAGpCtB,KAAKmB,SAASS,EAAMC,MAAMP,GAAetB,KAAKoB,iBAAiBY,KAC9DhC,KACC4B,EAAMC,KAAMP,MCnEXW,cAA0B,CAC/B/B,QAAS,CAERgC,QAAS,IAIVtC,QAAA,SAAQgC,GACP,GAAKA,EAAMM,QASX,IALA,IAAMA,EACoB,mBAAlBN,EAAMM,QACVN,EAAMM,QAAQlC,KAAKmB,UACnBS,EAAMM,YAEe/B,EAAAC,OAAOC,KAAK6B,GAAZ5B,WAAAA,IAAsB,CAA1C,IAAM6B;AACVnC,KAAKV,SAAS,CACb,GACG6C,EAAWJ,MAAM,MACnB,wBAAwBH,EAAMC,SAAQM,OAEvC,CACgC,mBAAxBD,EAAQC,GACf,mBAAmBP,EAAMC,SAAQM,6BAGnCnC,KAAKkC,QAAWN,EAAMC,SAAQM,GAAgBD,EAAQC,GAAY3B,KACjER,KAAKmB,SAASS,EAAMC,OAIrB7B,KAAKmB,SAASS,EAAMC,MAAMM,GAAcnC,KAAKoB,iBAAiBY,KAC7DhC,KACC4B,EAAMC,KAAMM,GAGdnC,KAAKmB,SAASS,EAAMC,MAAMM,GAAYC,UAAW,IAKnDvC,oBAAW6B,GAAX;AACC,OAAO,SAAAW,GAAQ,OAAA,SAAOvB,iHAEjBA,EAAOW,QAAQzB,KAAKkC,WACjBG,EAAKvB;OACX,OADAX,YACOH,KAAKkC,QAAQpB,EAAOW,MAC1BX,EAAOS,QACPG,EAAMC,WACNb,EAAOU;OAGT,SAAOa,EAAKvB;AC9DA,SAASwB,yBAAyBjD,GAChD,IAAIY,EACAsC,EAASlD,EAAKkD;AAalB,MAXsB,mBAAXA,EACNA,EAAOC,WACVvC,EAASsC,EAAOC,YAEhBvC,EAASsC,EAAO,cAChBA,EAAOC,WAAavC,GAGrBA,EAAS,eAGHA,EJER,IAAIA,OAASwC,yBAXXpD,KADkB,oBAATqD,KACFA,KACoB,oBAAXC,OACTA,OACoB,oBAAXC,OACTA,OACoB,oBAAXC,OACTA,OAEAC,SAAS,cAATA,IKNLC,YAAc,CAChBC,KAAM,eAAiBC,KAAKC,SAASC,SAAS,IAAIC,UAAU,GAAGC,MAAM,IAAIC,KAAK,KAC9EC,QAAS,kBAAoBN,KAAKC,SAASC,SAAS,IAAIC,UAAU,GAAGC,MAAM,IAAIC,KAAK,MAGlFE,QAA4B,mBAAXjB,QAAoD,iBAApBA,OAAOkB,SAAwB,SAAUC,GAC5F,cAAcA,GACZ,SAAUA,GACZ,OAAOA,GAAyB,mBAAXnB,QAAyBmB,EAAIC,cAAgBpB,QAAUmB,IAAQnB,OAAOqB,UAAY,gBAAkBF,GAGvHG,SAAWzD,OAAO0D,QAAU,SAAUC,GACxC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAASF,UAAUD;AAEvB,IAAK,IAAIzD,KAAO4D,EACV/D,OAAOwD,UAAUQ,eAAerE,KAAKoE,EAAQ5D,KAC/CwD,EAAOxD,GAAO4D,EAAO5D,IAK3B,OAAOwD;AAOT,SAASM,cAAcX,GACrB,GAAkE,iBAA9C,IAARA,EAAsB,YAAcF,QAAQE,KAA8B,OAARA,EAAc,OAAO;AAGnG,IADA,IAAIY,EAAQZ,EAC4B,OAAjCtD,OAAOmE,eAAeD,IAC3BA,EAAQlE,OAAOmE,eAAeD;AAGhC,OAAOlE,OAAOmE,eAAeb,KAASY,EA4BxC,SAASE,YAAYC,EAASC,EAAgBC,GAC5C,IAAIC;AAOJ,GAL8B,mBAAnBF,QAAqD,IAAbC,IACjDA,EAAWD,EACXA,OAAiBG,QAGK,IAAbF,EAA0B,CACnC,GAAwB,mBAAbA,EACT,MAAUG,MAAM;AAGlB,OAAOH,EAASH,YAATG,CAAsBF,EAASC,GAGxC,GAAuB,mBAAZD,EACT,MAAUK,MAAM;AAGlB,IAAIC,EAAiBN,EACjBO,EAAeN,EACfO,EAAmB,GACnBC,EAAgBD,EAChBE,GAAgB;AAEpB,SAASC,IACHF,IAAkBD,IACpBC,EAAgBD,EAAiBI,SASrC,SAAS1D,IACP,GAAIwD,EACF,MAAUL,MAAM;AAGlB,OAAOE,EA0BT,SAASM,EAAUC,GACjB,GAAwB,mBAAbA,EACT,MAAUT,MAAM;AAGlB,GAAIK,EACF,MAAUL,MAAM;AAGlB,IAAIU,GAAe;AAKnB,OAHAJ,IACAF,EAAcO,KAAKF,GAEZ,WACL,GAAKC,EAAL,CAIA,GAAIL,EACF,MAAUL,MAAM;AAGlBU,GAAe,EAEfJ;AACA,IAAIM,EAAQR,EAAcS,QAAQJ;AAClCL,EAAcU,OAAOF,EAAO,KA6BhC,SAASvE,EAASL,GAChB,IAAKuD,cAAcvD,GACjB,MAAUgE,MAAM;AAGlB,QAA2B,IAAhBhE,EAAOW,KAChB,MAAUqD,MAAM;AAGlB,GAAIK,EACF,MAAUL,MAAM;AAGlB,IACEK,GAAgB,EAChBH,EAAeD,EAAeC,EAAclE,WAE5CqE,GAAgB,EAIlB,IADA,IAAIU,EAAYZ,EAAmBC,EAC1BlB,EAAI,EAAGA,EAAI6B,EAAU3B,OAAQF,IAAK,EAEzCuB,EADeM,EAAU7B,MAI3B,OAAOlD,EAkET,OAFAK,EAAS,CAAEM,KAAMsB,YAAYC,QAEtB4B,EAAQ,CACbzD,SAAUA,EACVmE,UAAWA,EACX3D,SAAUA,EACVmE,eAzDF,SAAwBC,GACtB,GAA2B,mBAAhBA,EACT,MAAUjB,MAAM;AAGlBC,EAAiBgB,EACjB5E,EAAS,CAAEM,KAAMsB,YAAYQ,aAoDtByC,QA3CT,WACE,IAAIC,EAEAC,EAAiBZ;AACrB,OAAOW,EAAO,CASZX,UAAW,SAAmBa,GAC5B,GAA4E,iBAAnD,IAAbA,EAA2B,YAAc3C,QAAQ2C,KAAwC,OAAbA,EACtF,MAAM,IAAIC,UAAU;AAGtB,SAASC,IACHF,EAAS9D,MACX8D,EAAS9D,KAAKV,KAMlB,OAFA0E,IAEO,CAAEC,YADSJ,EAAeG,OAG7BL,QAAgB,WACtB,OAAOhG,MACNiG,GAagCrB,EAuBvC,SAAS2B,8BAA8BhG,EAAKO,GAC1C,IAAI0F,EAAa1F,GAAUA,EAAOW;AAGlC,MAAO,UAFiB+E,GAAc,WAAoBA,EAAc,KAAO,aAEzC,cAAgBjG,EAAM,iLA8B9D,SAASkG,mBAAmB3E,GAC1B1B,OAAOC,KAAKyB,GAAU4E,QAAQ,SAAUnG,GACtC,IAAIkE,EAAU3C,EAASvB;AAGvB,QAA4B,IAFTkE,OAAQI,EAAW,CAAEpD,KAAMsB,YAAYC,OAGxD,MAAU8B,MAAM,YAAcvE,EAAM;AAItC,QAAkD,IAAvCkE,OAAQI,EAAW,CAAEpD,KADrB,gCAAkCwB,KAAKC,SAASC,SAAS,IAAIC,UAAU,GAAGC,MAAM,IAAIC,KAAK,OAElG,MAAUwB,MAAM,YAAcvE,EAAM,6EAAqFwC,YAAYC,KAAO,iTAqBlJ,SAAS2D,gBAAgB7E,GAGvB,IAFA,IAAI8E,EAAcxG,OAAOC,KAAKyB,GAC1B+E,EAAgB,GACX7C,EAAI,EAAGA,EAAI4C,EAAY1C,OAAQF,IAAK,CAC3C,IAAIzD,EAAMqG,EAAY5C;AAQO,mBAAlBlC,EAASvB,KAClBsG,EAActG,GAAOuB,EAASvB,IAGlC,IAAIuG,EAAmB1G,OAAOC,KAAKwG,GAO/BE,OAAsB;AAC1B,IACEN,mBAAmBI,GACnB,MAAOG,GACPD,EAAsBC,EAGxB,OAAO,WACL,IAAIjG,EAA2B,EAAnBkD,UAAUC,aAA+BW,IAAjBZ,UAAU,GAAmBA,UAAU,GAAK,GAC5EnD,EAASmD,UAAU;AAEvB,GAAI8C,EACF,MAAMA;AAYR,IAFA,IAAIE,GAAa,EACbC,EAAY,GACP5G,EAAK,EAAGA,EAAKwG,EAAiB5C,OAAQ5D,IAAM,CACnD,IAAI6G,EAAOL,EAAiBxG,GAExB8G,EAAsBrG,EAAMoG,GAC5BE,GAAkB5C,EAFRoC,EAAcM,IAEEC,EAAqBtG;AACnD,QAA+B,IAApBuG,EAAiC,CAC1C,IAAIC,EAAef,8BAA8BY,EAAMrG;AACvD,MAAUgE,MAAMwC,GAElBJ,EAAUC,GAAQE,EAClBJ,EAAaA,GAAcI,IAAoBD,EAEjD,OAAOH,EAAaC,EAAYnG,GAIpC,SAASwG,kBAAkBC,EAAerG,GACxC,OAAO,WACL,OAAOA,EAASqG,EAAcxF,MAAMhC,KAAMiE,aAyB9C,SAASwD,mBAAmBC,EAAgBvG,GAC1C,GAA8B,mBAAnBuG,EACT,OAAOH,kBAAkBG,EAAgBvG;AAG3C,GAAwF,iBAAzD,IAAnBuG,EAAiC,YAAclE,QAAQkE,KAAoD,OAAnBA,EAClG,MAAU5C,MAAM,0EAA+F,OAAnB4C,EAA0B,YAAmC,IAAnBA,EAAiC,YAAclE,QAAQkE,IAAmB;AAKlN,IAFA,IAAIrH,EAAOD,OAAOC,KAAKqH,GACnBC,EAAsB,GACjB3D,EAAI,EAAGA,EAAI3D,EAAK6D,OAAQF,IAAK,CACpC,IAAIzD,EAAMF,EAAK2D,GACXwD,EAAgBE,EAAenH;AACN,mBAAlBiH,IACTG,EAAoBpH,GAAOgH,kBAAkBC,EAAerG,IAGhE,OAAOwG,EAcT,SAASC,UACP,IAAK,IAAIC,EAAO5D,UAAUC,OAAQ4D,EAAQC,MAAMF,GAAOV,EAAO,EAAGA,EAAOU,EAAMV,IAC5EW,EAAMX,GAAQlD,UAAUkD;AAG1B,OAAqB,IAAjBW,EAAM5D,OACD,SAAU8D,GACf,OAAOA,GAIU,IAAjBF,EAAM5D,OACD4D,EAAM,GAGRA,EAAMG,OAAO,SAAUC,EAAGC,GAC/B,OAAO,WACL,OAAOD,EAAEC,EAAEnG,WAAM6C,EAAWZ,eAqBlC,SAASmE,kBACP,IAAK,IAAIP,EAAO5D,UAAUC,OAAQmE,EAAcN,MAAMF,GAAOV,EAAO,EAAGA,EAAOU,EAAMV,IAClFkB,EAAYlB,GAAQlD,UAAUkD;AAGhC,OAAO,SAAU3C,GACf,OAAO,WACL,IAAK,IAAI8D,EAAQrE,UAAUC,OAAQqE,EAAOR,MAAMO,GAAQE,EAAQ,EAAGA,EAAQF,EAAOE,IAChFD,EAAKC,GAASvE,UAAUuE;AAG1B,IAAI9G,EAAQ8C,EAAYxC,WAAM6C,EAAW0D,GACrCE,EAAY,WACd,MAAU3D,MAAM,2HAGd4D,EAAgB,CAClB/G,SAAUD,EAAMC,SAChBR,SAAU,WACR,OAAOsH,EAAUzG,WAAM6C,EAAWZ,aAGlC0E,EAAQN,EAAYO,IAAI,SAAU/I,GACpC,OAAOA,EAAW6I;AAIpB,OAFAD,EAAYb,QAAQ5F,WAAM6C,EAAW8D,EAAzBf,CAAgClG,EAAMP,UAE3C0C,SAAS,GAAInC,EAAO,CACzBP,SAAUsH,yOCtjBFhE,GAA6B,OAAAA,EAAQoE,SAAS,MCDxDC,6BAA+B,SACpCC,gBAAAA;AAEQ,IAAAC,aAAUC;AAElB,OAAQD,GACW,iBAAXrG,QACPA,OAAOuG,qCACLvG,OAAOuG,qCAAqCD,GAC5CE;AAGJ,qBAAwBhJ,GAAxB,WACCiJ,UACAC,WAKM1C,EAAkByC,EAAMzC,iBAAmB2C,gBAC3C9E,EAAkC4E,EAAM5E,aAAe+E,YACvDC,OACyB,IAAvBJ,EAAMI,aAA+BJ,EAAMI,aAAe;AAElExJ,KAAK8B,SAAWsH,EAAMtH,SAGtB9B,KAAKyJ,cAAgB,SAACC,GAGrB,oBAHqBA,MAErBC,EAAK7H,qBAAgB6H,EAAK7H,SAAa4H,GAClCtJ,OAAOC,KAAKsJ,EAAK7H,UAAUoC,OAIzByC,EAAgBgD,EAAK7H,UAFpB,SAACf,GAAe,OAAAA,IAKzBf,KAAK4J,mBAAqB,SAAChI,GAG1B,IAFA,IAAMiI,EAAmBjI,EAAMkI,YACzBC,EAAgB,OACK5J,EAAAC,OAAOC,KAAKuB,EAAME,UAAY,IAA9BxB,WAAAA,IAAmC,CAAzD,IAAM0J,OACJlJ,EAASmJ,WAAWD,GACvBA,EACGpI,EAAMC,SAAQmI;AACpBD,EAAcjJ,GAAUc,EAAME,SAASkI,GAExC,IAAME,EAAkB,SAACnJ,EAA0BD,GAElD,oBAFwBC,EAAaa,EAAMb,OAED,mBAA/BgJ,EAAcjJ,EAAOW,MACxBsI,EAAcjJ,EAAOW,MAAMV,EAAOD,EAAOS,QAAST,EAAOU,MAE1DT;AAGR4I,EAAK7H,SAASF,EAAMC,MAASgI,EAE1B,SAAC9I,EAAYD,GACb,OAAAoJ,EAAgBL,EAAiB9I,EAAOD,GAASA,IAFjDoJ;AAKJ,IAAoB,QAAAC,IAAA7J,WAAAA,IAAQ,CAC3BN,KAAK4J,yBAGN5J,KAAKoK,kBAAoB,SACxBC,gBAAAA;AAEA,IAAMC,EAAqCX,EAAKF;AAChD,OAAIrJ,OAAOC,KAAKgK,GAAcnG,OACtB,SAACnD,EAAOD,GAEd,OACQwJ,EADJD,EAAavJ,EAAOW,OACD8I,EAFGF,EAAavJ,EAAOW,OAELV,EAAOD,GAE1BC,EAFmCD,IAKpDwJ;AAGR,IAAME,EAAcxK,KAAKoK,kBAAkBhB,EAAMiB,cAE3ChC,EAAcoC,sBAAAC,MAAyBtB,EAAMf,aAC7CsC,EAAY7B,6BAA6BM,EAAML,6BACjDK,EAAMuB,kBACTtC;AAKD,OAFArI,KAAK0B,MAAQ8C,EAAYgG,EAAahB,EAAcmB,GAE7C3K,KCvFR,IAAM4K,YAA0B,CAAChK,eAAgBqB,kCAahD,WAAYzC,GAAZ;AAHQQ,aAAsB,GAI7BA,KAAKR,OAASA,EACdQ,KAAK6K,cAAgBA,cAAcrL;AACnC,IAAqB,QAAAW,EAAAyK,YAAYE,OAAO9K,KAAKR,OAAOuL,SAA/BzK,WAAAA,IAAyC,CAC7DN,KAAK+K,QAAQtF,KAAKzF,KAAK6K,cAAcpL,cAGtCO,KAAKgL,cAAc,aAAc,SAACnL,GACjC8J,EAAKnK,OAAO4J,MAAMf,YAAY5C,KAAK5F,KAiEtC,OA9DQoL,0BAAP,SAAqBtK,EAAgBuK,GACpC,IAAqB,QAAA/K,EAAAH,KAAK+K,QAALzK,WAAAA,IAAc,CAA9B,IAAMZ;AACNA,EAAOiB,IACVuK,EAAGxL,EAAOiB,MAINsK,sBAAP,SAAiB5B,GAChB,OAAOjJ,OAAOC,KAAKgJ,GAAQT,IAAI,SAAC/G,GAAiB,iBAChDA,QACGwH,EAAOxH,IACVC,SAAUuH,EAAOxH,GAAMC,UAAY,QAG9BmJ,qBAAP,SAAgBrJ,GACftC,SAAS,CACR,EAAEsC,EAAO,4BACT,CAAuB,iBAAfA,EAAMC,KAAmB,qCACjC,MAAiBgD,IAAhBjD,EAAMb,YAA6C8D,IAAtBjD,EAAMkI,YAA2B,6BAC/D,MAAuBjF,IAAtBjD,EAAMkI,aAA0D,mBAAtBlI,EAAMkI,YAA4B,4CAG9E9J,KAAKgL,cAAc,UAAW,SAACpL,GAAY,OAAAA,EAAQgC,MAE7CqJ,iBAAP,WAAA;AAECjL,KAAKqJ,OAASrJ,KAAKmL,UAAUnL,KAAKR,OAAO6J;AACzC,IAAoB,QAAAlJ,EAAAH,KAAKqJ,OAAL/I,WAAAA,IAAa,CAChCN,KAAKoL,eAIN,IAAMhC,EAAQiC,YAAYtL,KAAKC,KAAM,CACpCoJ,MAAOpJ,KAAKR,OAAO4J,MACnBC,OAAQrJ,KAAKqJ,SAGRiC,YACLzJ,KAAM7B,KAAKR,OAAOqC,MACfuH,EAAM1H,OAETE,MAAO,SAACA,GACP+H,EAAKyB,SAASxJ,GACdwH,EAAMK,cAAcL,EAAMQ,mBAAmBhI,IAC7CwH,EAAM1H,MAAMoE,eAAesD,EAAMgB,kBAAkBT,EAAKnK,OAAO4J,MAAMiB,eACrEjB,EAAM1H,MAAMP,SAAS,CAAEM,KAAM;AAe/B,OAXAzB,KAAKgL,cAAc,iBAAkB,SAACrL,GACrC,IAAM4L,EAAW5L,EAAe2L;AAG5BC,GACHnL,OAAOC,KAAKkL,GAAY,IAAI7E,QAAQ,SAACnG,GACpC+K,EAAa/K,GAAOgL,EAAShL,OAKzB+K,2BCtFOE,GACfxK,QAAQC,KAAKuK,ICHRC,MAAQ,SAACC,EAAerJ,GAC7B,OAAOA,cAAYA,EAAUqJ,GAAY,IAAQA,GAAY,yBAW9CC,GAmDf,IAlDA,IAAMnM,YACLqC,KAAM8J,EAAW9J,KACjBwH,OAAQ,GACR0B,QAAS,IACNY,GACHvC,gBACCtH,SAAU,GACVuI,aAAc,GACdM,UAAW,GACXtC,YAAa,IACVsD,EAAWvC,OACdL,yBACClH,KAAM8J,EAAW9J,MACb8J,EAAWvC,OAASuC,EAAWvC,MAAML,eACtC4C,EAAWvC,MAAML,eACjB,YAmCe5I,EAAAX,EAAOuL,QAAPzK,WAAAA,IAAgB,CAAhC,IAAMZ;AACV,GAAIA,EAAOF,OAAQ,CAElB,IAAM6J,EAAmBoC,MAAMjM,EAAO6J,OAAQ3J,EAAOF,OAAO6J;AAC5D7J,EAAO6J,OAASA,EAGhB7J,EAAOuL,QAAcvL,EAAOuL,eAAarL,EAAOF,OAAOuL,SAAW,IAG9DrL,EAAOF,OAAO4J,QACjB5J,EAAO4J,MAAMI,aAAeiC,MAC3BjM,EAAO4J,MAAMI,aACb9J,EAAOF,OAAO4J,MAAMI,cAErBhK,EAAO4J,MAAMtH,SAAW2J,MACvBjM,EAAO4J,MAAMtH,SACbpC,EAAOF,OAAO4J,MAAMtH,UAErBtC,EAAO4J,MAAMiB,aAAeoB,MAC3BjM,EAAO4J,MAAMiB,aACb3K,EAAOF,OAAO4J,MAAMtH,UAErBtC,EAAO4J,MAAMuB,UACTnL,EAAO4J,MAAMuB,iBACZjL,EAAOF,OAAO4J,MAAMuB,WAAa,IAEtCnL,EAAO4J,MAAMf,YACT7I,EAAO4J,MAAMf,mBACZ3I,EAAOF,OAAO4J,MAAMf,aAAe,IAExC7I,EAAO4J,MAAMzC,gBACZnH,EAAO4J,MAAMzC,iBAAmBjH,EAAOF,OAAO4J,MAAMzC,gBACrDnH,EAAO4J,MAAM5E,YACZhF,EAAO4J,MAAM5E,aAAe9E,EAAOF,OAAO4J,MAAM5E,cAIpD,OAAOhF,GCnGKmC,SAAW,WACvBiK,UAAU,8NAKEzK,SAAW,WACvByK,UAAU;SAYKC,YAAuDjK,GACtE,OAAOA,EAIR,IAAIkK,MAAQ,EASCC,KAAO,SAACJ,gBAAAA;AACpB,IAAM9J,EAAO8J,EAAW9J,MAAQiK,GAAAA;AAChCA,OAAS;AACT,IAAMtM,EAAmBwM,wBAAiBL,GAAY9J;AACtD,OAAO,IAAIoJ,QAAQzL,GAAQuM,cAGb,CACdA;"}